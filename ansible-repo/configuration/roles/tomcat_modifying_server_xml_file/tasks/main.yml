  - name: app_tomcat existence state
    stat: path=/home/mettl/{{ volume }}/{{ app }}-tomcat
    register: app_tomcat

  - name: setenv.sh existence state
    stat: path=/home/mettl/{{ volume }}/{{ app }}-tomcat/bin/setenv.sh
    register: setenv

  - name: ensure required packages are installed for Java {{ java_version }}
    become: true
    apt: name=python-software-properties state=latest update_cache=yes
    when: not app_tomcat.stat.exists

  - name: Add Java repository to sources
    become: true
    action: apt_repository repo='ppa:webupd8team/java'
    when: not app_tomcat.stat.exists

  - name: Autoaccept license for Java {{ java_version }}
    become: true
    action: shell echo oracle-java{{ java_version }}-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
    when: not app_tomcat.stat.exists

  - name: Update APT package cache
    become: true
    action: apt update_cache=yes
    when: not app_tomcat.stat.exists

  - name: Install Java {{ java_version }}
    become: true    
    action: apt pkg=oracle-java{{ java_version }}-installer state=latest install_recommends=yes
    when: not app_tomcat.stat.exists

  - name: Set Java {{ java_version }} Env
    become: true
    action: apt pkg=oracle-java{{ java_version }}-set-default state=latest install_recommends=yes
    when: not app_tomcat.stat.exists

  - name: check logreader existence
    become: true
    group: name=logreader state=present
    when: not app_tomcat.stat.exists

  - name: Check user "mettl" existence 
    user: name=mettl group=logreader home=/home/mettl/ state=present  
    become: true
    when: not app_tomcat.stat.exists

  - name: Creates directory {{ volume }} if does not exist
    become: true    
    file: path=/home/mettl/{{ volume }} state=directory owner=mettl group=logreader
    when: not app_tomcat.stat.exists

  - name: Download tomcat 
    become: true
    get_url: url=https://archive.apache.org/dist/tomcat/tomcat-{{ tomcat_release }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz dest=/home/mettl/{{ volume }}/apache-tomcat-{{ tomcat_version }}.tar.gz  owner=mettl group=logreader
    when: not app_tomcat.stat.exists

  - name: Create default tomcat directory if app_tomcat does not exist
    become: true
    file: state=directory path=/home/mettl/{{ volume }}/apache-tomcat-{{ tomcat_version }}/ owner=mettl group=logreader recurse=yes
    when: not app_tomcat.stat.exists

  - name: Unarchive tomcat 
    become: true
    unarchive: src=/home/mettl/{{ volume }}/apache-tomcat-{{ tomcat_version }}.tar.gz dest=/home/mettl/{{ volume }}/ copy=no owner=mettl group=logreader 
    when: not app_tomcat.stat.exists

  - name: Move default tomcat to app tomcat
    become: true
    command: mv /home/mettl/{{ volume }}/apache-tomcat-{{ tomcat_version }} /home/mettl/{{ volume }}/{{ app }}-tomcat
    when: not app_tomcat.stat.exists


  - name: Create Catalina directory
    become: true    
    file: state=directory path=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/Catalina/localhost owner=mettl group=logreader recurse=yes
    when: not app_tomcat.stat.exists

  - name: root xml
    become: true    
    file: state=directory path=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/Catalina/localhost owner=mettl group=logreader recurse=yes
    when: not app_tomcat.stat.exists

  - name : write content in root xml
    become: true
    template: src=/home/ubuntu/configuration/roles/{{ role }}/files/{{ env }}/{{ root_template }} dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/Catalina/localhost/{{catalina_root}}.xml  
    when: not app_tomcat.stat.exists


  - name : write content in setenv.sh
    become: true
    template: src=/home/ubuntu/configuration/roles/{{ role }}/files/{{ env }}/setenv.sh dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/bin/setenv.sh force=yes
    when: not setenv.stat.exists


  - name: Commenting AJP in server.xml
    become: true
    replace: dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/server.xml regexp='^    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />' replace='<!-- <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /> -->' 
    when: not app_tomcat.stat.exists

  - name: Changing server port in server.xml
    become: true
    replace: dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/server.xml regexp='^<Server port="8005" shutdown="SHUTDOWN">' replace='<Server port="{{ server_port }}" shutdown="SHUTDOWN">'
    when: not app_tomcat.stat.exists

  - name: Changing Connector port in server.xml
    become: True    
    replace: dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/server.xml regexp='^    <Connector port="8080" protocol="HTTP/1.1"' replace='<Connector port="{{ connector_port }}" protocol="org.apache.coyote.http11.Http11NioProtocol" maxThreads="{{ max_threads }}"'
    when: not app_tomcat.stat.exists


  - name: Changing log format in server.xml
    become: true  
    replace: dest=/home/mettl/{{ volume }}/{{ app }}-tomcat/conf/server.xml regexp='^               pattern="%h %l %u %t &quot;%r&quot; %s %b" />' replace='pattern="%I %h %l %u %t %D %F &quot;%r&quot; %s %b" />'
    when: not app_tomcat.stat.exists


